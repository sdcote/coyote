allprojects {
	defaultTasks 'clean', 'build', 'publish', 'installDist'
	group = 'coyote'
}


subprojects {
	apply plugin: 'java'
	apply plugin: 'jacoco'
	apply plugin: 'maven-publish'
	apply plugin: 'application'
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	repositories {
		//mavenLocal()
		mavenCentral()
		maven {
			url = "https://maven.pkg.github.com/sdcote/packages"
			credentials {
				// get credentials from 'gradle.properties' if they exist or from the environment
				username = project.findProperty("USERNAME") ?: System.getenv("secrets.ACTIONS_USER")
				password = project.findProperty("TOKEN") ?: System.getenv("secrets.ACTIONS_TOKEN")
			}
		}
	}

	// custom tasks for creating source/javadoc jars
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	// add javadoc/source jar tasks as artifacts
	artifacts {
		archives sourcesJar, javadocJar
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java

				artifact sourcesJar {
					classifier "sources"
				}

				artifact javadocJar {
					classifier "javadoc"
				}
				groupId = project.group
				artifactId = project.archivesBaseName
				version = project.version
			}
		}
	
		repositories {
			mavenLocal()
			maven {
				url = "https://maven.pkg.github.com/sdcote/packages"
				credentials {
					username = project.findProperty("USERNAME") ?: System.getenv("secrets.ACTIONS_USER")
					password = project.findProperty("TOKEN") ?: System.getenv("secrets.ACTIONS_TOKEN")
				}
			}
		}
	}

	jacocoTestReport {
    	reports {
        	xml.enabled = true
	        html.enabled = true
    	}
	}

	check.dependsOn jacocoTestReport

}
