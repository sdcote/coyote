#!/bin/sh

# You are encouraged to make use of encryption in the toolkit and specify the 
# encryption algorithm and secret key as system properties. If you do, then this 
# file should be readable only by root (600) to protect encryption secrets.

### BEGIN INIT INFO
# Provides:          cdx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: Start/stop CDX daemon
### END INIT INFO

# Using the lsb functions to perform common operations.
. /lib/lsb/init-functions

# If not set by other means, use this as the application home
if [ -z "$APP_HOME" ] ; then
	APP_HOME="/opt/cdx"
fi

# By default the config directory is just below the home directory
if [ -z "$APP_WORK" ] ; then
	APP_WORK="$APP_HOME/wrk"
fi

# This is the configuration to run; it should load a service.
if [ -z "$APP_CFG" ] ; then
	APP_CFG="$APP_HOME/cfg/daemon.json"
fi

# This is the name of the cipher to use for this instances encryption
if [ -z "$CIPHER_NAME" ] ; then
	CIPHER_NAME="BlowFish"
fi

# This is the cipher key (initialization vector) the encryption uses
if [ -z "$CIPHER_KEY" ] ; then
	CIPHER_KEY="TG9hZGVyQ295b3Rl"
fi

# Here is where you set the options for the VM
if [ -z "$JAVA_OPTS" ] ; then
	# Enables remote debugging
	# JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n"
	# Creates heap profiles for memory analysis with jhat and other tools
  # JAVA_OPTS="-agentlib:hprof=heap=all,format=b"
	# Always pick sensible memory limits; you should not need much memory for CDX
	JAVA_OPTS="-Xmx256M"
	# Show all the settings... these will appear in the $CONSOLE_LOG below including your cipher key!
  # JAVA_OPTS="-XshowSettings"
fi

CONSOLE_LOG=$APP_HOME/cdxd.log

# Build the class path dynamically from all the jars in the lib directory
CLASSPATH=$(JARS=("$APP_HOME"/lib/*.jar); IFS=:; echo "${JARS[*]}")
CLASSPATH=$APP_HOME/cfg:$CLASSPATH
CLASSPATH=$APP_HOME/fix:$CLASSPATH

case $1 in
	start)
		echo "Starting CDX Daemon ..."
		if [ -f "$APP_HOME"/pid ]; then
			echo "CDX Daemon may be running, attempting restart ..."
			PID=$(cat "$APP_HOME"/pid);
			kill $PID;
			rm "$APP_HOME"/pid
			sleep 5
		fi
		nohup java "$JAVA_OPTS" -cp "$CLASSPATH" -Dapp.home="$APP_HOME" -Dapp.work="$APP_WORK" -Dcipher.name="$CIPHER_NAME" -Dcipher.key="$CIPHER_KEY" coyote.loader.BootStrap "$APP_CFG" 2>> "$CONSOLE_LOG" >> "$CONSOLE_LOG" &
		echo $! > "$APP_HOME"/pid
		log_success_msg "CDX started in $!"
	;;
	stop)
		if [ -f "$APP_HOME"/pid ]; then
			PID=$(cat "$APP_HOME"/pid);
			log_success_msg "Stopping CDX ..."
			kill $PID;
			log_success_msg "CDX stopped"
			rm "$APP_HOME"/pid
		else
			log_failure_msg "CDX is not running"
		fi
	;;
	restart)
		if [ -f "$APP_HOME"/pid ]; then
			PID=$(cat "$APP_HOME"/pid);
			log_success_msg "Stopping CDX ...";
			kill $PID;
			log_success_msg "CDX stopped";
			rm "$APP_HOME"/pid
			log_success_msg "Starting CDX ..."
			nohup java "$JAVA_OPTS" -cp "$CLASSPATH" -Dapp.home="$APP_HOME" -Dapp.work="$APP_WORK" -Dcipher.name="$CIPHER_NAME" -Dcipher.key="$CIPHER_KEY" coyote.loader.BootStrap "$APP_CFG" 2>> /dev/null >> /dev/null &
			echo $! > "$APP_HOME"/pid
			log_success_msg "CDX started"
		else
			log_failure_msg "CDX is not running"
		fi
	;;
esac
